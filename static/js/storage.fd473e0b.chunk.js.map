{"version":3,"sources":["storage.js","fs.js"],"names":["__webpack_require__","r","__webpack_exports__","_fs__WEBPACK_IMPORTED_MODULE_0__","fs","create_fs","window","addEventListener","_ref","data","source","method","then","_ref2","files","postMessage","_ref3","clear","importStorage","Promise","resolve","reject","done","frame","document","createElement","contentWindow","src","style","display","body","appendChild","setTimeout","downloadFile","_callee","store","name","file","blob","url","lnk","F_WorkSpace_diabloweb_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","wrap","_context","prev","next","get","toLowerCase","sent","Blob","type","URL","createObjectURL","setAttribute","click","removeChild","revokeObjectURL","console","error","concat","stop","downloadSaves","_callee2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_context2","undefined","keys","t0","Symbol","iterator","value","match","t1","return","finish","readFile","reader","FileReader","onload","result","onerror","onabort","readAsArrayBuffer","uploadFile","_callee3","_context3","Uint8Array","set","abrupt","_x7","_create_fs","apply","this","arguments","_callee4","load","_i","_Object$entries","_ref7","_name","_data","_files","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_ref6","_ref5","_context4","IdbKvStore","Map","Object","json","entries","call","length","F_WorkSpace_diabloweb_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","t2","DownloadFile","DownloadSaves","update","delete","remove","download","upload","t3"],"mappings":"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","file":"static/js/storage.fd473e0b.chunk.js","sourcesContent":["import create_fs from './fs';\r\n\r\nconst fs = create_fs();\r\nwindow.addEventListener('message', ({data, source}) => {\r\n  if (data.method === 'transfer') {\r\n    fs.then(({files}) => {\r\n      source.postMessage({method: 'storage', files}, '*');\r\n    });\r\n  } else if (data.method === 'clear') {\r\n    fs.then(({clear}) => clear());\r\n  }\r\n});","import IdbKvStore from  'idb-kv-store';\r\n\r\nconst importStorage = () => new Promise((resolve, reject) => {\r\n  let done = false;\r\n  const frame = document.createElement('iframe');\r\n  window.addEventListener('message', ({data}) => {\r\n    if (data.method === 'storage' && !done) {\r\n      done = true;\r\n      resolve(data.files);\r\n      frame.contentWindow.postMessage({method: 'clear'}, '*');\r\n    }\r\n  });\r\n  frame.addEventListener('load', () => {\r\n    frame.contentWindow.postMessage({method: 'transfer'}, '*');\r\n  });\r\n  frame.addEventListener('error', () => {\r\n    if (!done) {\r\n      done = true;\r\n      resolve(null);\r\n    }\r\n  });\r\n  frame.src = \"https://diablo.rivsoft.net/storage.html\";\r\n  frame.style.display = \"none\";\r\n  document.body.appendChild(frame);\r\n  setTimeout(() => {\r\n    if (!done) {\r\n      done = true;\r\n      resolve(null);\r\n    }\r\n  }, 10000);\r\n});\r\n\r\nasync function downloadFile(store, name) {\r\n  const file = await store.get(name.toLowerCase());\r\n  if (file) {\r\n    const blob = new Blob([file], {type: 'binary/octet-stream'});\r\n    const url = URL.createObjectURL(blob);\r\n    const lnk = document.createElement('a');\r\n    lnk.setAttribute('href', url);\r\n    lnk.setAttribute('download', name);\r\n    document.body.appendChild(lnk);\r\n    lnk.click();\r\n    document.body.removeChild(lnk);\r\n    URL.revokeObjectURL(url);\r\n  } else {\r\n    console.error(`File ${name} does not exist`);\r\n  }\r\n}\r\n\r\nasync function downloadSaves(store) {\r\n  for (let name of await store.keys()) {\r\n    if (name.match(/\\.sv$/i)) {\r\n      downloadFile(store, name);\r\n    }\r\n  }\r\n}\r\n\r\nconst readFile = file => new Promise((resolve, reject) => {\r\n  const reader = new FileReader();\r\n  reader.onload = () => resolve(reader.result);\r\n  reader.onerror = () => reject(reader.error);\r\n  reader.onabort = () => reject();\r\n  reader.readAsArrayBuffer(file);\r\n});\r\nasync function uploadFile(store, files, file) {\r\n  const data = new Uint8Array(await readFile(file));\r\n  files.set(file.name.toLowerCase(), data);\r\n  return store.set(file.name.toLowerCase(), data);\r\n}\r\n\r\nexport default async function create_fs(load) {\r\n  try {\r\n    const store = new IdbKvStore('diablo_fs');\r\n    const files = new Map();\r\n    for (let [name, data] of Object.entries(await store.json())) {\r\n      files.set(name, data);\r\n    }\r\n    if (load) {\r\n      const files = await importStorage();\r\n      if (files) {\r\n        for (let [name, data] of files) {\r\n          files.set(name, data);\r\n          store.set(name, data);\r\n        }\r\n      }\r\n    }\r\n    window.DownloadFile = name => downloadFile(store, name);\r\n    window.DownloadSaves = () => downloadSaves(store);\r\n    return {\r\n      files,\r\n      update: (name, data) => store.set(name, data),\r\n      delete: name => store.remove(name),\r\n      clear: () => store.clear(),\r\n      download: name => downloadFile(store, name),\r\n      upload: file => uploadFile(store, files, file),\r\n    };\r\n  } catch (e) {\r\n    window.DownloadFile = () => console.error('IndexedDB is not supported');\r\n    window.DownloadSaves = () => console.error('IndexedDB is not supported');\r\n    return {\r\n      files: new Map(),\r\n      update: () => Promise.resolve(),\r\n      delete: () => Promise.resolve(),\r\n      clear: () => Promise.resolve(),\r\n      download: () => Promise.resolve(),\r\n      upload: () => Promise.resolve(),\r\n    };\r\n  }  \r\n}\r\n"],"sourceRoot":""}